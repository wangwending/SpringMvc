<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


	<!-- 如果配置了包扫描 这个配置可以不使用 -->
	<!-- <context:annotation-config></context:annotation-config> -->
	
	<context:component-scan base-package="com.wwd.web">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 在这里配置AOP的代理只能父容器使用 而MVC不能使用AOP的代理 因为父容器不能访问子容器上下文 而子容器能够访问父容器的上下文 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"></aop:aspectj-autoproxy> -->

	<!-- <bean id="studentService" class="com.wwd.service.impl.StudentServiceImpl"></bean> -->
	<!-- <bean id="aopHandler" class="com.wwd.web.aop.AopHandler"></bean> <bean 
		id="aopService" class="com.wwd.web.service.impl.AopServiceImpl"></bean> -->

	<import resource="classpath*:spring/schedu.xml" />
	<import resource="classpath*:spring/dataSource.xml" />
	<import resource="classpath*:spring/spring-mybatis.xml" />
	<import resource="classpath*:spring/mybatis-config.xml" />
	<import resource="classpath*:spring/resource.xml" />
	<!-- 开启定时注解 -->
	<!-- <task:annotation-driven mode="proxy" /> -->
</beans>